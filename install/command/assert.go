// Code generated by go-bindata.
// sources:
// install/command/assert.go
// install/command/command.go
// install/command/containerd.go
// install/command/containerd.json
// install/command/docker.go
// install/command/docker.json
// DO NOT EDIT!

package command

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _installCommandAssertGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func installCommandAssertGoBytes() ([]byte, error) {
	return bindataRead(
		_installCommandAssertGo,
		"install/command/assert.go",
	)
}

func installCommandAssertGo() (*asset, error) {
	bytes, err := installCommandAssertGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "install/command/assert.go", size: 0, mode: os.FileMode(420), modTime: time.Unix(1569546424, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _installCommandCommandGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x93\x4f\x6b\xdb\x4c\x10\xc6\xcf\x3b\x9f\x62\x58\x48\x90\xc0\xb6\xee\x2f\xe4\xf0\x62\x9a\xa6\x50\x5a\xd3\x34\xed\x21\xe4\xb0\x5e\x8d\xe4\x25\xfb\x47\xec\x8e\x93\xb8\xc1\xdf\xbd\xac\x2c\xa9\xb6\x0a\xf5\x49\x3c\x7e\xe6\x37\xf3\xcc\xee\x76\x4a\x3f\xab\x96\x50\x07\xe7\x94\xaf\x01\x8c\xeb\x42\x64\x2c\x40\xc8\xc6\xb1\x04\x91\x48\xd9\x90\x50\xb6\x86\x77\xfb\xed\x4a\x07\x57\x35\xca\xef\xdf\xaa\xd3\x1f\x95\xf1\x89\x95\xb5\x12\x84\x4c\x1c\x8d\x6f\x93\x84\x12\xe0\x45\xc5\x0c\xf9\x46\xad\x49\x1c\x0f\xff\xc7\x88\x8f\x4f\x27\x03\x88\xcf\x66\x8b\xe3\x6f\xd4\x36\xcf\xed\x43\xb4\x17\x5a\x09\xc0\x87\x8e\x30\x31\x75\x9f\x3c\x53\x6c\x94\x26\x34\xd3\xd7\x3b\x88\x7b\xf2\xf5\xe6\x94\xa1\xd8\x85\xc4\x43\x69\x09\xe2\xbb\x8a\x33\x65\x1d\x7c\x63\xda\x99\xf8\xc1\xab\xad\x9d\xd7\xfe\xa0\x98\x4c\xf0\x33\xf5\xc1\x0f\x59\x67\xfa\x26\x1a\xcf\x45\x09\xe2\x96\x58\xef\xf2\x47\x55\x81\xb0\x66\x5b\x94\x53\xba\x44\xf1\xc5\x68\xba\x35\x96\x8a\x12\x1f\x9f\xb6\x07\x26\x10\xba\x9f\xe8\x52\x3c\x02\x34\x7b\xaf\x31\xcd\x92\x2d\x70\x1f\xed\x02\x1b\x63\xe9\x8b\x72\x34\xb6\xcf\x4b\xa8\xaa\xe0\xed\x01\x77\xcc\x1d\x08\x93\xee\x98\x3b\xfc\xef\x66\x70\xa4\xd5\x9d\x4a\x9b\x48\x8d\x79\x2b\x7a\x82\xcc\x3e\x59\x82\xa8\xc3\xab\xb7\x41\xd5\x6b\x57\x67\xbb\x94\x20\x4c\x83\x43\xfd\x3b\x88\xc9\xb0\x51\x51\xb9\xd1\x92\x3d\xff\x22\x27\xd9\xcf\x34\xaf\xbe\x41\xb9\x5c\xfa\xb0\xd4\x3b\xd2\xcf\x4b\x4d\x91\x4d\x63\xb4\x62\xca\xc8\xe3\x59\xb3\x3c\xcd\x0d\x36\x8e\x57\xf7\x5d\x5e\x6c\x53\x48\x7c\x6d\x89\xf1\x2a\xe1\xf2\x2b\x5e\x25\xb9\xc0\x0b\xf4\x9f\x9d\x94\x90\x49\x91\x5c\x60\x1a\x42\x5d\x70\x74\x8d\x55\x0c\x81\xf1\xfa\x1a\x33\xee\x2a\xe1\x19\x6c\xed\xea\x7e\xc7\x25\x08\x1b\xb4\xb2\xf9\x58\xfe\x42\xf4\xf5\x55\x3f\xc4\x59\xd7\xcb\xb5\xb5\x01\x4f\x6f\x63\xf5\x53\xb1\xde\x65\xce\xbd\xf9\x35\x9e\xe2\xc4\x5e\x8c\xae\x8f\xc4\x93\x27\xf7\x2f\x41\x0c\xaf\x6e\xb5\x76\xf5\x50\x36\xa5\xca\x21\x91\x6c\xea\xaf\xff\xe4\x0b\xdd\xe1\xfc\x96\x4c\x4d\xfa\x95\x1c\xe1\x77\x00\x00\x00\xff\xff\x55\x1e\x8b\xbb\xe7\x03\x00\x00")

func installCommandCommandGoBytes() ([]byte, error) {
	return bindataRead(
		_installCommandCommandGo,
		"install/command/command.go",
	)
}

func installCommandCommandGo() (*asset, error) {
	bytes, err := installCommandCommandGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "install/command/command.go", size: 999, mode: os.FileMode(420), modTime: time.Unix(1569486417, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _installCommandContainerdGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x58\x5d\x6f\xe4\xb6\xd5\xbe\x1e\xfe\x0a\x46\x40\x0c\x4d\xe2\x91\x66\x9c\x6c\xf6\x03\xd0\x0b\xac\xbd\xde\xc0\x6f\x1c\x7b\x61\xef\x26\x08\xc6\x86\xc2\x91\x8e\x34\x8c\x29\x52\x25\xa9\xb1\x27\xc6\x00\xbd\x68\xda\x22\x57\x01\x0a\x14\x6d\x2f\xd2\x02\x45\xd0\xab\xde\xf6\xa2\xc9\xcf\xa9\xb7\xbd\xeb\x5f\x28\x48\x7d\x8e\x3d\xda\xdd\x6e\x2f\x0c\x8f\xc8\xe7\x7c\xf0\xe1\x39\x87\x87\xcc\x49\x74\x41\x52\xc0\x91\xc8\x32\xc2\x63\x84\x68\x96\x0b\xa9\xb1\x8b\x06\xce\x6c\xa9\x41\x39\x68\xe0\x00\x8f\x44\x4c\x79\xea\x7f\xa5\x04\x37\x03\x49\xa6\xcd\xbf\x94\xea\x79\x31\xf3\x22\x91\xf9\xcf\x0a\x90\x17\x54\x8b\x5d\x2a\xfc\x54\xfc\xac\x00\xb9\x74\xd0\x40\x01\x61\x42\xe1\x2e\x30\x21\xbc\xb8\xf2\xcb\x09\x9f\x72\xa5\x09\x63\xb7\x74\x5d\x0a\x1e\x83\xa4\x0b\xc2\x7d\x26\xd2\x14\xa4\x99\xe7\xa0\xfd\xb9\xd6\xb9\xf9\x2d\xac\x57\x1a\xae\xb4\xaf\x21\xcb\x19\xd1\xe0\xa0\x21\x42\x7a\x99\x03\xde\x13\x5c\x13\xca\x41\xc6\x58\x69\x59\x44\xfa\x7a\x85\x50\x52\xf0\x08\x1f\xc1\x65\x3b\xe9\x0e\xb1\xd2\x90\x1f\x70\x0d\x32\x21\x11\xe0\x6b\x34\x58\x10\x79\x6b\x70\xed\x0b\x0d\xd6\x27\x03\xbc\xd5\xea\xbb\x5e\xa1\x81\x04\x5d\x48\x7e\x4b\x68\x85\x50\x24\xb8\xd2\x38\x6a\xb0\x4f\x29\x83\x23\x92\x19\x0d\x4e\x3b\xea\xe9\xf4\x6b\xa7\x72\xd5\x8d\xf1\x7b\xad\xee\x21\x66\x74\x66\x1d\x96\x94\xa7\xc6\x53\x9a\xe0\x43\x3a\xc3\x41\x80\x1d\xc7\x7c\xd7\xa6\x1d\x7f\x41\xa4\xcf\xe8\xcc\x6f\xf5\x3a\x68\xb0\xc2\xc0\x14\x74\x81\x87\x74\x86\x06\x2b\xb4\xda\x6c\xee\x14\x78\xfc\xac\x8c\x0c\x77\x2e\x94\xae\x2c\x0f\x8d\x06\x75\x6b\x6e\x1b\x3f\xbb\x48\x5f\x48\xb6\xbd\x61\x81\x43\xb4\xea\x59\xd0\x73\x22\xef\x68\x8e\xb2\x18\x3f\x0a\x70\x92\x69\xef\x34\x97\x94\xeb\xc4\x75\x34\x91\x78\x34\x32\xa0\x7c\x14\x89\x2c\x17\x1c\xb8\x56\xc1\x04\x8f\xae\x16\x5f\x27\xd8\x97\x42\x68\xff\x5d\x85\x47\x7b\xd8\x2f\x94\xf4\x99\x88\x08\xf3\x67\x94\x3b\x9b\xfd\xa9\x42\xd2\xdb\xcb\xe2\xca\xfb\x28\x8b\x87\x7d\x3c\xec\x09\x9e\xd0\xb4\xcf\x51\x27\xbb\x88\xa9\xc4\xa3\x1c\x3b\xf8\x7d\x1c\x7b\x76\x93\xfa\x2c\x58\xa1\xae\x8c\x0f\x3a\x5a\xdf\xa5\x1e\x41\xdf\xaf\x44\x5b\xb0\x59\x5a\x42\x53\x1c\x43\x42\x0a\xa6\xf1\xff\xdd\xd6\xe6\x97\x00\x4f\x8b\xcc\x64\x57\xa5\x00\xa2\xb9\xc0\x67\x8e\xf1\xb6\x5c\x8d\x1b\x7b\x25\xd0\x10\xe4\x0e\x87\xf8\x7d\xec\x9c\x39\xaf\x55\xd7\xc7\xe1\x66\x12\xf7\x39\x99\xb1\xbb\x71\x54\x93\xb8\xc9\x29\x05\x72\x41\x23\xb8\xe3\x95\xdd\x61\x3a\xf3\xd5\x52\x69\xc8\xe2\xea\x7f\xc7\xd1\x5a\xb2\x9f\xcd\x8a\x8a\x52\x32\xd2\x0c\x83\x75\x0f\xe3\xbb\x4a\xf0\xd6\x16\x6e\x71\x12\x94\x26\x52\x6f\x02\xfe\xd7\x94\x7c\x06\x52\x51\xc1\x7b\x39\xe9\xec\xf4\x68\xb4\x28\xc1\xfd\x4b\x2a\x8b\xa4\xf7\x39\x91\xdc\x75\xf2\x82\x31\x1c\x8b\xe8\x02\x24\x9e\x17\xb3\xba\xb0\x7b\x18\xae\x1e\xe1\x48\x4b\x4c\x33\x92\x82\xc2\x1d\x9c\x47\x85\x61\x55\x12\xb9\xf4\x09\xcb\x29\x87\x47\x1f\x78\x0f\x9c\x8d\x9a\x4d\x09\xc6\x12\x52\xaa\xb4\x5c\xae\x2b\xbf\xa3\x7d\x32\xf6\xc6\xde\x87\xf7\xbc\x9d\x9d\x9d\x0d\xfa\xf1\x68\x94\x33\x42\xf9\xc8\x56\xf5\x7e\xae\x5e\xf0\xea\x94\xe8\x65\xab\xdd\x23\xa5\x45\xfe\xfa\x9d\x8c\xa9\xb2\x5b\xfe\x16\x61\x23\x33\x3c\x92\xc9\xad\x52\xe3\x9b\x85\x6f\x6d\xe1\x9e\xc9\xc6\xca\x7b\xf8\x8d\xf5\xdf\xad\xe2\x5d\x03\xb7\x92\xf3\x55\x7a\x69\x52\x17\x26\xfc\x4e\x73\x58\xac\x1b\x5b\x2b\x5e\x7d\x7a\x56\xbd\xfb\xb3\x96\xab\x78\x7a\x6e\xba\x86\xfa\x30\xad\x4f\xe7\xe7\x70\xa5\x71\x50\xe7\xf7\x97\xd3\x17\x9c\xea\x73\xf4\x04\x54\x24\x69\xae\xa9\xe0\xc1\x7a\x6d\x2b\x7f\x62\x59\x70\x4d\x33\x40\x4f\x44\x54\x64\xc0\x35\xb1\x50\x13\x2f\xea\x91\xdf\xcd\x7a\x2a\xd0\xe3\x44\x83\x0c\x38\xe8\x4b\x21\x2f\x3c\x4d\x64\x0a\x1a\x61\x8c\xa6\xa7\xa5\x7f\xe7\x68\xff\x0a\xa2\x53\x93\xc2\x41\xef\x0e\xa1\x93\x32\xc9\x03\xc2\x2e\xc9\x52\xd5\x9f\xa7\x10\x05\xf7\xd0\x13\x60\x90\x12\x0d\xc1\x12\x14\xfa\x84\x32\xf6\xa9\x88\x21\xc8\xa5\x88\x40\x29\x74\x7c\xfc\xe9\x69\x24\x24\x3c\x8e\xbf\x2a\x94\x0e\x46\x0f\x1f\x3e\x44\x87\x34\xa3\xfa\xe8\xf8\xe9\xc1\xe1\x7e\x30\x19\x7f\xf8\xe0\xde\xfd\x8f\xaa\xb1\x67\x27\xc7\x7b\x01\xe5\x09\xe5\x54\x2f\xcb\xb1\xbd\xe3\x93\xfd\x76\xc8\x78\x7e\x50\xc6\xfd\x39\xfa\x9c\x70\x0d\xf1\xee\x32\xc8\x0a\xa6\xe9\xa8\x50\x20\xeb\x15\x7e\x39\x6c\xda\x8e\x92\x7a\xb7\xcb\x79\xef\xc1\xd6\xad\xfa\x6f\xb6\x67\xe6\xa0\xc5\x01\x3e\x73\xae\xaf\xbd\xbd\xe3\xa3\xe7\x8f\x0f\x8e\xf6\x4f\x9e\x84\x87\x07\xbb\xab\xd5\x99\x83\x94\x26\x1a\xec\xbc\x2f\x8b\x2e\xa5\x67\x0e\x12\x22\x0b\x95\xe1\x06\x07\x78\x8c\xd0\x34\x95\x79\x74\x8e\x30\x26\x71\x2c\x41\xa9\x4d\x52\x6b\x25\x5d\x44\x17\x67\x0e\xc2\xb8\xa0\xb1\xd5\x80\x71\xda\xfc\xca\xc8\x55\x28\x21\x5a\x84\x19\x28\x45\x52\x08\x15\xfd\xda\xd8\x99\x7c\x74\xff\xfe\xfd\x9d\xc9\x47\x15\xc4\x34\x2d\xbd\x10\x34\x8d\x61\x56\xa4\xb7\x5d\xea\xb5\xc9\x60\x01\xac\x86\xa0\x69\x06\x5a\xd2\x48\x6d\x14\x37\x4b\x0d\xe7\x54\x69\x91\x4a\x92\xe1\x00\x27\x84\x29\x40\x68\x1a\xa5\x52\x14\xb9\x91\xc9\x89\x9e\xb7\xca\x72\x56\xa4\x94\x5b\x65\xf5\x6f\xaf\xc4\xda\x31\x8c\xb9\x08\x73\x29\x32\xd0\x73\x28\x54\xa3\xb0\x8b\x96\xb4\x44\x2a\x2d\x81\x64\xa1\xc9\x4f\x90\x61\xd7\xb5\xc9\xce\x7d\xcf\xd4\xe6\x89\xf5\xf1\x36\xd2\xf6\xff\x06\x36\xae\xa6\xcb\x13\x32\x54\xc0\x28\x2f\xae\x3a\x36\x31\x56\x84\xc7\x33\x71\x15\xda\xb2\x6f\x85\x2e\x1e\x28\x2f\x8d\xec\x99\x92\x93\x42\x99\x52\xdf\x9a\x21\x5a\x85\x91\x60\x0c\x22\x1d\xe6\x20\xa9\x30\x94\x4e\xc6\xe5\x6c\x79\xa6\x87\xe5\x6a\xd7\xac\x54\x0e\x68\xa6\xc2\xd2\x55\xd3\x05\x77\x01\x66\x8b\x9b\x88\x09\x99\x48\x43\x46\x79\x67\xa3\x3f\x78\xf0\xa1\xc5\x75\x49\xf2\xda\x10\x2b\xf9\xc2\x58\x71\x92\xab\xb9\xd0\x1a\xa4\x5d\x8b\x58\x80\x64\x64\x99\xa8\x6a\x01\x25\xfb\x74\x61\x33\xa1\xb5\xde\xab\xd7\xab\xfa\xb3\xb0\x2a\x64\xb5\x1d\x5c\x57\xb6\xd0\xde\x58\x8c\x29\x2a\xba\x72\xd5\xb4\xb7\x98\x78\x96\xf3\xc6\x7e\x2b\x09\x3c\xa5\x1c\xda\x48\x5b\x9f\x6d\xb2\xb5\x99\xeb\x73\xb1\xe0\x5a\x16\x4a\x43\x1c\x9a\xc2\xc9\x04\x89\xdf\xc0\xdb\xff\xd9\x9f\x75\x6f\x38\xad\x6d\xcd\x28\x0f\x4d\x7f\x6c\x4b\x82\xc8\xb5\x1f\x71\x6a\x6a\x74\xa3\xd2\x14\xae\x16\x61\x0f\x42\x4e\x7d\x0e\xda\x8b\xd7\x31\x75\x19\xeb\xb5\x5a\x37\x31\xe7\x9b\x08\xaa\x27\xbd\x8c\x4a\x29\xa4\x6a\xb9\x78\x25\xcc\x3b\x73\x9a\x96\xea\xcc\x69\x85\x4c\x08\xc7\xb9\xa0\xdc\x90\x30\x3d\x73\xea\x23\xac\x96\x1f\x4d\xbc\x8d\x72\xd7\xd7\x92\xf0\x14\x70\xb7\xe2\x9e\xec\x7f\x7c\x70\xfa\xfc\xe4\x0b\x3c\x5a\xad\x5e\xe7\xcc\xf5\xb5\x67\xaa\x73\xbf\x23\x6b\x80\xeb\x6b\xe0\xb1\x51\x7b\x97\xac\xab\x7b\xe3\x87\xe1\x05\x2c\xc3\x9c\x50\xd9\x26\x61\xad\xd8\x64\x66\x04\x52\x87\x09\x65\xb7\x62\xc0\x4c\x19\xc1\xf5\x99\x46\x79\x4c\x93\x64\xa4\xea\x23\xda\x08\xd4\x77\x1a\xeb\xdf\x25\x61\x17\x94\xa7\xa5\x87\x8d\x90\xcd\x89\xaa\xc8\xcd\x69\x66\xd5\xb6\x21\x3d\x32\x63\x95\xfd\x2a\xfe\x2c\x42\x16\x3c\x5a\x1f\xbe\x13\x96\x5c\x84\x95\xc2\x4e\x89\x9b\xd3\x2c\xb4\x07\xc4\xa6\x6a\x2b\x72\x5d\x3a\xd2\x94\xf1\x32\x6c\xbb\xe7\x5f\x07\x5e\x5d\x22\x4a\x11\xca\x35\xc8\x05\x29\x8f\x92\xc9\x58\xad\x43\x55\x34\x87\xb8\x60\x20\x6b\xfd\x85\x82\x50\xcf\x25\xa8\xb9\x60\xf6\x28\xf2\xc6\x3b\x15\x63\x0c\x4c\x67\xb4\x3e\x5b\x16\xc6\xa2\x6c\x9a\xd6\xa6\x26\xe3\xaa\xe2\x56\x16\xc2\x18\x18\x59\x96\x25\x5f\xb5\xb5\x5a\xea\x22\xef\x4c\x4d\xc6\xe3\xcc\xcc\x9a\x8e\x43\x67\x39\xdb\xc6\x20\xa5\xe9\xbf\xeb\x4c\xf3\x8e\xe0\xd2\xb5\xaf\x32\xce\xd0\x7b\x46\xa4\xba\xdd\x8b\x98\x66\xd4\xc8\xbc\x13\x60\x4e\x99\xed\x44\xab\x0b\xc6\xbe\x09\x58\x23\x5b\xe5\x6c\x6e\xa4\x71\x42\x28\x83\xf8\x91\x63\x2d\x99\xde\x34\x27\x9c\x46\xee\xc4\xb6\xa3\xb6\x57\x01\xbe\xf8\x94\x98\xb3\x22\x23\x17\xe0\x66\x24\x9f\x96\xed\xca\x39\xad\x9f\x5f\xae\x57\x43\x34\x28\x61\x53\x67\x43\x16\x39\xe7\x38\xc0\x27\x55\xe6\x3c\x96\x72\x23\xf8\xf0\x60\xd7\xe2\x9a\x2e\xd9\xd8\x9e\x15\x49\x02\x12\xdb\x47\x32\x6f\xd7\x7e\xa0\x41\x88\x03\x6c\xc8\xf1\x4c\xb3\x59\x68\x70\xb7\x4a\xd8\x76\xe5\x6a\xdb\xad\x95\xe3\xde\xae\x11\x77\xfb\x6f\x3f\xcf\x24\xe5\xda\xb5\xd7\x9d\x98\x68\xd2\x90\xfe\x58\x29\xd0\xae\x53\x5d\x8d\xfc\xea\x22\xd6\x6d\x9b\xec\x5b\xdd\xeb\x49\x2f\xa9\xad\xf8\xac\xae\x9a\x0a\x4f\xcf\x4b\x22\xcb\x15\x19\x55\xde\x0b\x9e\x11\xa9\xe6\x84\xb9\xa5\x23\x5b\x35\x78\x88\x06\x89\x90\x38\xdc\xc6\x0b\xe3\x59\x59\xb1\x1a\x4d\xc6\xa0\x7d\xcc\x61\xdc\x5d\xbc\xf2\x22\xf1\x14\x74\x34\x2f\x97\x5a\x48\x66\x6f\x76\x1b\x5b\x7d\x3f\x16\x97\xdc\x1c\x54\xca\x77\x0c\x9d\x2a\x6f\x58\x31\x78\xef\x63\xd0\x6e\x21\xd9\x9b\x2e\x7d\x20\x94\xb7\x7f\x45\x75\x1d\x57\x34\x31\x57\xfd\xdc\x3b\xd5\x44\x17\x6a\x4f\xc4\x60\x14\xec\x8c\xc7\x1b\x02\xd6\xde\x86\x23\x03\xa1\x0a\x73\xa1\x0d\xcc\xd9\xa0\xb3\x87\xdb\x58\x44\x8d\xeb\xd5\xa3\xa9\x49\xa2\xfa\xba\xf3\x54\x8a\xec\x04\x48\x0c\xd2\xb5\x1e\xed\x8a\x78\xf9\xb6\xab\x22\x73\x9d\x59\x4e\x63\x11\x79\x4f\x29\x8f\x5d\x87\x4c\x23\x46\x94\x0a\xce\x9c\x59\xa1\xb5\xe0\x98\xaa\x51\x4c\xe4\x85\xf9\x1f\x31\x9a\xcf\x04\x31\xe5\xeb\xdc\x69\x37\xb8\x56\x52\xee\xb1\xd5\xe9\x1d\x89\x18\xca\x6d\x26\x5a\x57\xbb\x90\x31\xef\xb1\xd6\x12\x0d\x8c\xb3\x0c\xb8\x6b\xa6\x86\x38\x08\xf0\x07\x16\x69\x86\xcd\xd0\x74\xe7\xdc\xfb\x04\x96\xf6\x1d\xd3\x44\x55\x6b\x77\x64\xeb\x48\x09\x1e\x34\xd4\x05\x98\xe4\x39\xf0\xd8\xad\x47\xb6\x1b\x35\x9f\x11\xb3\xe3\x83\x86\x8c\x27\xa6\x62\xbb\xce\xcd\xb7\x7f\xba\xf9\xe6\x87\x7f\xfe\xf4\x9b\x9b\xbf\xfe\xee\xe6\xe7\x3f\xfd\xfb\xa7\x3f\xbc\xab\x9c\xbb\x52\x2b\x64\xff\x56\xe8\xb6\xf8\x2f\x7f\x7f\xf3\xcd\x0f\x26\xfe\x5f\xfe\xf6\x57\xff\xf8\xf1\x6f\x86\x8b\xf2\xa4\xfe\x7f\x25\x78\xb3\x79\x42\x79\xc7\x39\x70\x7b\x9f\x7a\x6d\x4e\x6e\x5b\x78\xf8\xf9\xc9\xf1\xd1\xe1\x17\xdb\x78\x7c\xff\xde\xbd\xb7\xdd\xd5\x18\x4c\x09\x6a\x1d\xf2\xf6\x98\x50\xe0\xda\x47\x43\x63\xeb\x5f\x7f\xf9\xf3\xcb\xef\xbf\x33\x35\xcd\x04\xa9\x75\xd5\xe6\xf2\x11\x5c\xee\x97\x43\x6e\x2b\x6c\x0a\xa5\x34\x8d\x55\x85\xf6\x4a\x88\xdb\x4d\xf4\xb7\xf0\xb2\x7d\x7a\xae\xa0\x07\x3c\x11\xae\xf3\xf2\xfb\x5f\xdc\xfc\xf8\xf7\x97\xbf\xfe\xee\xe6\xdb\x3f\x3a\x76\x35\x68\x85\xfe\x13\x00\x00\xff\xff\x9e\xc3\xb7\x15\x8e\x18\x00\x00")

func installCommandContainerdGoBytes() ([]byte, error) {
	return bindataRead(
		_installCommandContainerdGo,
		"install/command/containerd.go",
	)
}

func installCommandContainerdGo() (*asset, error) {
	bytes, err := installCommandContainerdGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "install/command/containerd.go", size: 6286, mode: os.FileMode(420), modTime: time.Unix(1569546146, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _installCommandContainerdJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x95\xcd\x6a\xc3\x30\x10\x84\xef\x7e\x8a\x90\x73\xbd\xf6\xfa\xaf\xd0\x57\x29\x3d\x28\x96\x48\x0c\x8e\x5c\x64\xa5\x29\x7d\xfa\xd2\x28\x2e\x61\xb5\xc7\xcc\x2d\x0c\x81\x8f\xd9\x19\x8f\xde\x8b\xdd\x6e\x7f\x8a\xf1\x73\x7d\xab\xaa\xe3\x14\x4f\x97\x03\x8d\xcb\xb9\x1a\x17\x1f\xcd\xe4\x5d\xb0\x8f\x3f\x83\x9b\x9d\x59\xdd\x5a\xd9\xe5\xea\xe7\xc5\xd8\xea\x8b\xa9\xa1\xd7\x87\xff\x94\x37\x81\xe6\xc9\x5f\xbe\x4b\x73\xb6\x43\x47\xd1\x04\x3a\xfe\xec\x5f\x9e\x81\x1a\x24\x6a\x00\xa1\x58\xba\x62\xa0\xab\x5e\xba\xea\x61\xa8\x4e\xa2\x3a\xd8\x01\x07\x79\x40\x54\x56\x0d\xb5\xd2\x55\x0b\x43\x35\x12\xd5\xc0\x50\x2c\x51\x0c\xcb\xaa\x97\x59\xe1\x1a\xc8\x65\x18\xa9\xce\xac\xdd\x54\x18\x34\xe3\x01\x51\x7f\x4e\xb2\x96\x24\x15\x0b\xcd\xfa\x92\x54\xb2\x26\x5c\x27\x0f\x68\x4d\x27\x5b\x83\x1a\x93\xbb\x95\x3c\x45\x70\x6b\xca\x83\x8b\x46\x0b\x33\xe9\xa8\xcb\xfe\x13\x94\x44\x93\x0e\x1b\x82\x56\x46\x8a\x5b\xd2\xbb\x17\x25\xd4\xa4\xc3\x3c\x36\xd2\x23\xea\xbb\x64\x19\x20\x03\x93\x63\x65\x77\x36\x15\x37\x01\xac\x0c\xcf\xa6\x62\xad\xd6\x2a\x14\xd7\x9a\x8c\x07\x44\xa9\x51\x42\x9f\x10\x56\x9f\x90\x4d\x05\x41\x6b\x39\x37\x35\x6c\x6e\x6a\x6a\x95\xd2\x6c\xaa\x06\x2d\x3e\x8a\xdf\x00\x00\x00\xff\xff\xb5\x14\xf4\xad\x1e\x0d\x00\x00")

func installCommandContainerdJsonBytes() ([]byte, error) {
	return bindataRead(
		_installCommandContainerdJson,
		"install/command/containerd.json",
	)
}

func installCommandContainerdJson() (*asset, error) {
	bytes, err := installCommandContainerdJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "install/command/containerd.json", size: 3358, mode: os.FileMode(420), modTime: time.Unix(1569545181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _installCommandDockerGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x57\x4f\x6f\x23\xb7\x15\x3f\x8b\x9f\xe2\x85\xd8\x35\x46\x1b\x69\xc6\x69\xb2\x9b\xd6\xc0\x04\xf0\xdf\xd4\x8d\xd7\x36\x64\x3b\x41\x20\x0b\x0e\x35\xf3\x46\x66\x3d\x43\x4e\x48\x8e\x6c\x45\x10\xd0\x43\xd3\x16\x39\x05\x28\x50\xb4\x3d\xa4\x05\x8a\xa0\xa7\x5e\x7b\x68\xf6\xe3\xd4\xdb\xde\xfa\x15\x0a\x92\x23\x59\x96\x65\x27\xeb\x18\x30\x46\x43\xbe\x3f\x3f\xbe\x1f\xdf\x9f\x29\x59\x72\xc1\x06\x08\x89\x2c\x0a\x26\x52\x42\x78\x51\x4a\x65\x20\x20\x0d\xda\x1f\x19\xd4\x94\x34\x28\x8a\x44\xa6\x5c\x0c\xa2\x5f\x6a\x29\xec\x42\x56\x18\xfb\x18\x70\x73\x5e\xf5\xc3\x44\x16\xd1\x61\x85\xea\x82\x1b\xb9\xc1\x65\x34\x90\x9f\x57\xa8\x46\x94\x34\x34\xb2\x5c\x6a\x98\x17\xcc\x98\xa8\xae\x22\xbf\x11\x71\xa1\x0d\xcb\xf3\x05\x5b\x97\x52\xa4\xa8\xf8\x90\x89\x28\x97\x83\x01\x2a\xbb\x2f\xd0\x44\xe7\xc6\x94\xf6\xb7\x74\xa8\xb4\x51\x5c\x0c\xdc\x4f\x83\x57\x26\x32\x58\x94\x39\x33\x48\x49\x93\x10\x33\x2a\x11\xb6\x64\x72\x81\x0a\xb4\x51\x55\x62\xc6\x13\x42\xb2\x4a\x24\xb0\x8f\x97\x7e\x23\x68\x82\x36\x58\xee\x0a\x83\x2a\x63\x09\xc2\x98\x34\x86\x4c\x2d\x2c\xde\x7a\x23\x8d\xdb\x9b\x31\xac\x78\x5b\xe3\x09\x69\x28\x34\x95\x12\x0b\x0a\x13\x42\x12\x29\xb4\x81\xd4\xc9\xed\xf0\x1c\xf7\x59\x61\x35\xa9\x5f\x09\xcd\xe0\x0b\x5a\x43\x0b\x52\x78\xe6\xed\x35\x21\xe7\x7d\x07\xd0\x1e\xd2\x22\xe3\x19\xec\xf1\x3e\xc4\x31\x50\x6a\xdf\xa7\xee\x68\x34\x64\x2a\xca\x79\x3f\xf2\xf6\x28\x69\x4c\x00\x73\x8d\xf3\x42\x7b\xbc\x4f\x1a\x13\x32\x59\xe2\xe7\x08\x45\x7a\xe8\x6f\x41\x70\x2e\xb5\xa9\x5d\x36\xad\xba\x5e\xd8\x6b\xc1\xe1\xc5\xe0\x44\xe5\xad\x85\xd3\x34\x97\x5a\x3e\x66\xea\x8e\xc5\xa4\x48\x61\x2d\x86\xac\x30\xe1\x51\xa9\xb8\x30\x59\x40\x0d\x53\xd0\x6e\x5b\xa1\xb2\x9d\xc8\xa2\x94\x02\x85\xd1\xf1\x3b\xd0\xbe\x1a\x7e\x91\x41\xa4\xa4\x34\xd1\x53\x0d\xed\x4d\x88\x2a\xad\xa2\x5c\x26\x2c\x8f\xfa\x5c\xd0\xbb\x38\xea\x2b\x17\x6e\x16\x69\x8d\x38\x29\xd2\xe5\xf0\x36\xa5\xc8\xf8\xe0\x3e\x84\xb4\xb8\x48\xb9\x82\x76\x09\x14\xde\x86\x34\x74\x74\xdc\x67\xde\x29\xcd\xeb\x44\x68\x92\x1b\x3e\x1e\x56\xc2\xe4\x5c\xc2\x29\xb5\x6e\x3c\x8c\x20\x0d\x13\x87\xcd\x1e\x2b\x68\x36\xe1\x6d\xa0\xa7\x14\x3e\x98\xb7\x1a\xa5\x0c\x0b\x29\xc2\x3a\x23\x7f\xf8\xa9\xb7\x05\xeb\xe7\x77\x99\x9e\x9e\x7a\x19\x18\x8d\x6a\xc8\x13\xbc\x83\xc6\x71\xc1\xfb\x91\x1e\x69\x83\x45\x5a\x3f\x6b\x80\x53\xad\xef\x3d\xbe\xd7\x4a\x4c\x0e\xe8\xa0\x01\xdc\x36\x00\x2b\x2b\x70\x23\xa3\x50\x1b\xa6\xcc\xa2\xd0\x1b\x85\xe0\x63\x54\x9a\x4b\x71\x6f\x0c\xbc\x69\x18\x7a\xb1\x37\x32\x7d\x22\xea\x92\x76\xaf\xf1\x9b\xa3\x68\x23\xcb\x87\x0f\x9b\x72\xed\x22\xf2\x86\x11\x55\x05\xb4\x55\xb6\x90\x2b\x91\xb2\x58\x57\x56\x60\xf9\x6e\x62\xd4\x03\x9b\x52\x18\xc6\x05\xaa\xf4\x19\x3c\xd2\xbb\x3f\xc2\xb3\x79\x1f\xb7\xcb\xd6\xfc\xce\xdc\x35\x7f\xc8\x21\xcf\xa6\x79\x09\x6f\xcd\xaa\xe2\x6d\x14\xb7\x72\xf7\x3e\x3b\xcb\xeb\xe2\xad\x5b\x0f\xdd\x9e\xed\x86\xd3\x0e\x31\x6d\x35\xc7\x78\x65\x20\x9e\x66\xca\x67\xdd\x13\xc1\x4d\x8f\x6c\xa1\x4e\x14\x2f\x0d\x97\x22\xae\x5b\xd0\x7a\x59\xe6\x3c\x61\x76\xc9\xd6\x1d\x1f\x4d\xd8\x16\x03\x2e\x90\x6c\xc9\xa4\x2a\x50\x18\xb7\x1d\xdb\x26\xa7\xd7\x22\x1b\x00\x1d\xd6\xcc\x27\xb2\x20\xeb\x99\x41\x15\x0b\x34\x97\x52\x5d\x84\x86\xa9\x01\x1a\x42\xba\x47\x1e\x66\x8f\x1c\x8f\x4a\x8c\x85\x34\x3c\x1b\x91\xed\x2b\x4c\x8e\x6c\x9e\xc4\x4b\x69\x48\x9d\x40\x07\x73\xc9\xd2\xd8\xad\x5f\xf0\x3c\x87\xb6\x86\x9f\x9f\x1c\xc2\x93\x97\xeb\xbb\xfb\x87\xbb\x5b\x64\x8f\x17\xdc\xec\x1f\xec\xec\xee\x6d\xc7\x5c\x64\x5c\x70\x33\xaa\x17\x0f\x3b\x07\x9b\x0b\x6b\x9b\x07\x9d\x39\xb1\x63\x5e\xa0\xac\x8c\x03\x71\x84\x49\xbc\x4a\xb6\x30\xc7\x01\x33\x18\x8f\x50\x93\x8f\x78\x9e\xbf\x94\x29\xc6\xa5\x92\x09\x6a\x4d\x48\x77\xd7\x27\x4e\x8f\x7c\xc2\x84\xc1\x74\x63\x14\x17\x55\x6e\x78\xbb\xd2\xb6\x47\xfa\xe3\x7e\xd6\x9c\x75\x59\x4f\x48\x30\xcf\x84\x4d\xc9\x3b\x34\xce\x57\xd2\x1f\xc6\xe2\x98\x00\x9c\x52\x85\x03\xae\x8d\x1a\xb5\x0b\xae\x94\x54\xfa\x94\xae\x41\x97\x80\xfd\x3b\xa5\x96\xa3\xb5\x28\x7a\xf7\xfd\x77\xd9\x8b\xe7\x3f\x7b\x2f\x2c\xc2\x94\xc9\x24\x97\x55\x1a\x72\x79\x4a\x09\x40\xaf\x45\x00\xc6\x63\x9e\x41\x8e\x02\xc2\xad\x83\xcd\x8f\xb6\x3b\x67\x9d\xed\x0f\x77\x8f\x8e\x3b\x9f\x4e\x26\xce\x07\x17\x1a\x93\x4a\x61\xbb\x76\xc6\xd1\xba\xf1\x4e\x00\xa0\x3b\x1e\x2b\x26\x06\x08\x4f\x78\xeb\xc9\x10\xd6\xe2\xbb\x66\x9c\x07\xfc\x1c\x9e\x70\x80\xd5\xc9\xe4\x94\x8e\xc7\x4f\x86\xfe\x69\x47\x80\xc9\xa4\x75\x6b\x49\xa4\x56\xc5\x3d\x6a\x80\xee\xb7\x03\x33\x50\xac\x3c\x3f\xa5\x6b\x56\x70\xea\x68\x6f\x77\xc3\x6a\x92\x89\x0d\xbc\x29\xca\xbc\x05\xa8\x94\xad\x63\xd3\xd8\x85\xfb\x78\x19\xb8\xf9\x8b\x36\xc3\x43\xa6\xf4\x22\x25\x36\x4b\xad\xce\x5b\x31\x08\x9e\xbb\x14\xf5\x43\x5d\xb8\x6d\xe3\x6a\x75\xbd\x38\x94\x56\x1b\x32\xc6\x73\x4c\xd7\xa8\xf3\x64\x93\xb6\x64\x82\x27\xc1\x3b\x2e\x4f\x1d\x6d\x28\x86\x2f\x59\x09\x31\x14\xec\x02\x83\x82\x95\x5d\xcf\x5c\x8f\x4f\x87\xae\xf1\xa4\x49\x1a\x5e\xac\x4b\x17\x62\x46\x7b\x10\x43\xa7\x26\x77\x5d\xa9\x3b\x82\x7b\xbb\x1b\x4e\x66\x56\x36\xac\xcf\x7e\x95\x65\xa8\xc0\x4d\xc4\xe1\x86\x7b\x21\x8d\x33\x88\xc1\x06\x25\xb4\xd9\x54\x19\x0c\x56\xbc\x58\xab\x86\x78\x73\x59\xfd\x7a\xb8\x61\xd5\x83\xe5\x9d\xe3\xd0\x0e\x43\x81\x6b\x15\x95\xca\x0f\x15\x66\xfc\xca\x35\x8c\x9b\x7a\x70\x29\x6c\xc2\xce\xd5\x84\x28\xe7\x6e\x98\xb6\x95\x23\xb1\x8f\x7e\x8e\xd1\xd5\x4f\x5f\x9c\xbd\x78\x2f\x7a\x6a\x07\xe3\x94\x19\x36\xa3\x6c\x5d\x6b\x34\x01\xad\x1b\x54\x54\x4f\xfc\xd3\x76\xed\x06\x89\xef\xa7\xab\x26\x45\xea\x70\xfb\x8a\x9b\x79\x5a\xea\x76\xa9\xa1\xdb\xf3\x7c\xf8\x00\x59\xbb\xe1\x89\x28\x98\xd2\xe7\x2c\x0f\x3c\xa2\x95\xa9\x70\x93\x34\x32\xa9\xe0\xac\x05\xf6\x7e\x83\xbf\xee\x33\x4b\xd6\xbb\x1b\x12\x73\x11\xcc\x4f\x8c\xb3\x00\xb5\x60\xd8\xbc\xb7\x80\xef\xa0\x49\xce\x67\x11\xfd\x31\xb1\xa4\x96\x48\x5d\xce\x22\x69\xcd\x84\x1f\xa2\xb1\x40\x1e\x1b\x32\x9e\xd9\x59\xa6\x0c\x8f\x0c\x33\x95\xde\x94\x29\x5a\x03\x3f\x59\x5d\x5d\x92\x22\xd6\x1f\x24\x56\x84\x6b\x10\xd2\x58\x31\xba\xc4\x66\x2a\x93\x19\xc6\xfa\x23\x2c\xf4\x5f\x3b\xae\xbf\xec\x28\x59\x74\x90\xa5\xa8\x02\xe7\x7a\x43\xa6\xa3\xc7\xc2\x67\xe7\xa6\x70\x31\x4d\x65\x12\xee\x70\x91\x06\x94\xd1\xe6\xbd\x37\xa1\x26\x79\xaa\xe4\x79\x76\x36\xc2\x7d\x99\xa2\xa7\x9a\x19\x53\x87\xb7\xc8\xc3\x75\x63\x14\x69\x34\x7c\x01\x0d\xec\x56\x13\x3e\x00\x1f\x1d\xbb\x5a\x7f\xfd\x85\x75\x37\xd5\x4e\xa4\xbb\xda\x0b\x3f\x66\x79\x6b\x3a\xc3\xd1\xa6\x97\x6f\xcc\x20\xc5\xc0\xca\x12\x45\x1a\x4c\x57\x5a\x30\xa7\xd8\x74\xc2\xf5\xf1\xb7\xb0\x5f\x0d\x02\x7a\xfd\xd5\x5f\xaf\xbf\xfc\xf6\x3f\xaf\x7e\x7f\xfd\x8f\x3f\x5e\xff\xea\xd5\xff\x5e\xfd\xf9\xa9\xa6\x77\xb5\x26\xc4\xfd\x4f\x48\x23\x8a\xc8\xa2\x89\xdf\xfc\xe9\xfa\xcb\x6f\x6d\x26\xbc\xfe\xc3\x6f\xff\xfd\xdd\x3f\x6d\xa0\x3c\xc0\x5f\x68\x29\x66\x94\x49\x1d\x1e\x94\x28\x5c\xaf\x7a\x30\x4d\x5b\x4e\xf4\xec\x93\xce\xc1\xfe\xde\xa7\x2d\x58\x7d\xff\xf9\xf3\xc7\xf2\x98\xa2\xad\x6b\x37\x60\xc2\xcd\x5c\x6a\xb4\x65\x2f\x72\x5f\xfb\xff\xfd\xfb\xdf\x5e\x7f\xf3\xb5\x2d\x92\xf6\xfe\x39\x98\x2e\xa3\xf7\xf1\x72\xdb\x2f\x05\x37\xca\xb6\xea\x2a\x05\x31\xd4\xd2\xa1\x17\x09\xe6\xd3\xfd\x11\x28\x6f\xbe\x66\x6b\xd1\x5d\x91\xc9\x80\xbe\xfe\xe6\xd7\xd7\xdf\xfd\xeb\xf5\xef\xbe\xbe\xfe\xea\x2f\xd4\x9d\x86\x4c\xc8\xff\x03\x00\x00\xff\xff\xa3\x71\x13\x3f\xd0\x10\x00\x00")

func installCommandDockerGoBytes() ([]byte, error) {
	return bindataRead(
		_installCommandDockerGo,
		"install/command/docker.go",
	)
}

func installCommandDockerGo() (*asset, error) {
	bytes, err := installCommandDockerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "install/command/docker.go", size: 4304, mode: os.FileMode(420), modTime: time.Unix(1569486417, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _installCommandDockerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xd1\x31\x0a\xc3\x30\x0c\x85\xe1\xdd\xa7\x08\x99\x1b\x61\xc9\xad\x22\x9d\xa5\x74\x4a\x4d\x87\x0e\x85\xd2\xa9\xa7\x0f\x78\x35\xff\xfa\x3d\xfc\xe0\xc9\xf7\xb2\x2c\xeb\xf3\x73\xbc\xfb\x77\xd3\x5d\x6a\x93\xba\x1d\x5d\x7e\xaf\xff\x7a\x99\x22\xe5\xc8\x28\x72\x2e\x74\x2e\x74\x2e\x4c\x2e\x4c\x2c\x54\xc3\x57\x6a\xf0\x2a\xf8\x1a\xc1\xd7\x08\x9e\x1c\x3c\x39\x78\xf2\x88\x1a\x45\x29\x15\x5c\xc1\x0d\xbc\x81\x5f\xc1\x6f\xe0\x0e\xbe\x83\x07\x78\xce\x9e\xe3\x47\x86\x97\x47\x39\x03\x00\x00\xff\xff\xf3\xf8\x86\xa9\xbb\x02\x00\x00")

func installCommandDockerJsonBytes() ([]byte, error) {
	return bindataRead(
		_installCommandDockerJson,
		"install/command/docker.json",
	)
}

func installCommandDockerJson() (*asset, error) {
	bytes, err := installCommandDockerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "install/command/docker.json", size: 699, mode: os.FileMode(420), modTime: time.Unix(1569486417, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"install/command/assert.go":       installCommandAssertGo,
	"install/command/command.go":      installCommandCommandGo,
	"install/command/containerd.go":   installCommandContainerdGo,
	"install/command/containerd.json": installCommandContainerdJson,
	"install/command/docker.go":       installCommandDockerGo,
	"install/command/docker.json":     installCommandDockerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"install": &bintree{nil, map[string]*bintree{
		"command": &bintree{nil, map[string]*bintree{
			"assert.go":       &bintree{installCommandAssertGo, map[string]*bintree{}},
			"command.go":      &bintree{installCommandCommandGo, map[string]*bintree{}},
			"containerd.go":   &bintree{installCommandContainerdGo, map[string]*bintree{}},
			"containerd.json": &bintree{installCommandContainerdJson, map[string]*bintree{}},
			"docker.go":       &bintree{installCommandDockerGo, map[string]*bintree{}},
			"docker.json":     &bintree{installCommandDockerJson, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
